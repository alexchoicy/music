name: Build & Publish (GHCR)

on:
  push:
    branches: ["master"]
    paths:
      - "apps/**"
      - "packages/**"
    tags:
      - "v*.*.*"
      - "api@v*.*.*"
      - "backend@v*.*.*"
  pull_request:
    types: [opened, synchronize, reopened, labeled]
    paths:
      - "apps/**"
      - "packages/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: |
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && (
        github.event.pull_request.user.login == github.repository_owner ||
        github.event.pull_request.user.login == 'dependabot[bot]' ||
        contains(github.event.pull_request.labels.*.name, 'run-ci')
      ))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            backend:
              - 'apps/backend/**'
              - 'packages/**'
            web:
              - 'apps/web/**'
              - 'packages/**'
      # backend
      - name: Docker metadata for backend
        id: meta-backend
        if: steps.changes.outputs.backend == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
          tags: |
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=sha

      - name: Build and push Docker image (backend)
        id: push-backend
        if: steps.changes.outputs.backend == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/backend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation (backend)
        uses: actions/attest-build-provenance@v3
        if: (github.event_name != 'pull_request' ) && (steps.changes.outputs.backend == 'true' || github.event_name == 'workflow_dispatch')
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-backend
          subject-digest: ${{ steps.push-backend.outputs.digest }}
          push-to-registry: true
        # web
      - name: Docker metadata for web
        id: meta-web
        if: steps.changes.outputs.web == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-web
          tags: |
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=sha

      - name: Build and push Docker image (web)
        id: push-web
        if: steps.changes.outputs.web == 'true' || github.event_name == 'workflow_dispatch'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/web/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-web.outputs.tags }}
          labels: ${{ steps.meta-web.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation (web)
        uses: actions/attest-build-provenance@v3
        if: (github.event_name != 'pull_request' ) && (steps.changes.outputs.web == 'true' || github.event_name == 'workflow_dispatch')
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-web
          subject-digest: ${{ steps.push-web.outputs.digest }}
          push-to-registry: true
