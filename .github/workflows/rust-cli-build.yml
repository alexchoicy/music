name: Rust CLI Build

on:
  push:
    branches: ["master"]
    paths:
      - "desktop/apps/cli/**"
      - "desktop/packages/**"
    tags:
      - "v*.*.*"
  workflow_dispatch:

# from tauri example
jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "ubuntu-latest"
            args: ""
            binary: "music_presence_cli"
          - platform: "windows-latest"
            args: ""
            binary: "music_presence_cli.exe"

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        working-directory: desktop
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./ -> target"

      - name: build
        run: cargo build --package music_presence_cli --release --locked

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.binary }}-${{ matrix.platform }}
          path: desktop/target/release/${{ matrix.binary }}
          if-no-files-found: error

  releases:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact for ubuntu
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
